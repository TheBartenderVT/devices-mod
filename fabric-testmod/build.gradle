plugins {
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

version rootProject.version

architectury {
    platformSetupLoomIde()
    fabric()
}


repositories {
    maven { url = "https://cursemaven.com" }
    maven { url "https://maven.terraformersmc.com/releases" }
    mavenCentral()
}

configurations {
    common
    shadowCommon // Don't use shadow from the shadow plugin because we don't want IDEA to index this.
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentFabric.extendsFrom common
}

dependencies {
    implementation project(path: ":fabric", configuration: "namedElements")
    implementation project(path: ":common", configuration: "namedElements")
    common(project(path: ":common", configuration: "transformProductionFabric")) { transitive false }
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    modApi "net.fabricmc.fabric-api:fabric-api:${rootProject.fabric_api_version}"
    modImplementation "com.terraformersmc:modmenu:4.0.6", {
        exclude module: "fabric-api"
    }

    modRuntimeOnly "curse.maven:forgeapiportfabric-547434:3946675"

    modRuntimeOnly 'com.electronwill.night-config:core:3.6.3'
    modRuntimeOnly 'com.electronwill.night-config:toml:3.6.3'
}

processResources {
//    inputs.property "version", rootProject.getIngame_version()
//
//    filesMatching("fabric.mod.json") {
//        expand "version": rootProject.getIngame_version()
//    }
}

//shadowJar {
//    configurations = [project.configurations.shadowCommon]
//    classifier "dev-shadow"
//}

//remapJar {
//    injectAccessWidener = true
//    input.set shadowJar.archiveFile
//    dependsOn shadowJar
//    classifier null
//}

jar {
    classifier "dev"
}

//sourcesJar {
//    def commonSources = project(":common").sourcesJar
//    dependsOn commonSources
//    from commonSources.archiveFile.map { zipTree(it) }
//}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

//publishing {
//    publications {
//        mavenFabric(MavenPublication) {
//            artifactId = rootProject.archives_base_name + "-" + project.name
//            from components.java
//        }
//    }
//
//    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
//    repositories {
//        // Add repositories to publish to here.
//    }
//}